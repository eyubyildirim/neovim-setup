local ls = require 'luasnip'
local s = ls.snippet
local t = ls.text_node

return {
  s({ trig = ';a', snippetType = 'autosnippet' }, { t '\\alpha' }),
  s({ trig = ';A', snippetType = 'autosnippet' }, { t '\\Alpha' }),
  s({ trig = ';b', snippetType = 'autosnippet' }, { t '\\beta' }),
  s({ trig = ';B', snippetType = 'autosnippet' }, { t '\\Beta' }),
  s({ trig = ';g', snippetType = 'autosnippet' }, { t '\\gamma' }),
  s({ trig = ';G', snippetType = 'autosnippet' }, { t '\\Gamma' }),
  s({ trig = ';d', snippetType = 'autosnippet' }, { t '\\delta' }),
  s({ trig = ';D', snippetType = 'autosnippet' }, { t '\\Delta' }),
  s({ trig = ';e', snippetType = 'autosnippet' }, { t '\\epsilon' }),
  s({ trig = ';E', snippetType = 'autosnippet' }, { t '\\Epsilon' }),
  s({ trig = ';z', snippetType = 'autosnippet' }, { t '\\zeta' }),
  s({ trig = ';Z', snippetType = 'autosnippet' }, { t '\\Zeta' }),
  s({ trig = ';h', snippetType = 'autosnippet' }, { t '\\eta' }),
  s({ trig = ';H', snippetType = 'autosnippet' }, { t '\\Eta' }),
  s({ trig = ';th', snippetType = 'autosnippet' }, { t '\\theta' }),
  s({ trig = ';Th', snippetType = 'autosnippet' }, { t '\\Theta' }),
  s({ trig = ';i', snippetType = 'autosnippet' }, { t '\\iota' }),
  s({ trig = ';I', snippetType = 'autosnippet' }, { t '\\Iota' }),
  s({ trig = ';k', snippetType = 'autosnippet' }, { t '\\kappa' }),
  s({ trig = ';K', snippetType = 'autosnippet' }, { t '\\Kappa' }),
  s({ trig = ';l', snippetType = 'autosnippet' }, { t '\\lambda' }),
  s({ trig = ';L', snippetType = 'autosnippet' }, { t '\\Lambda' }),
  s({ trig = ';m', snippetType = 'autosnippet' }, { t '\\mu' }),
  s({ trig = ';M', snippetType = 'autosnippet' }, { t '\\Mu' }),
  s({ trig = ';n', snippetType = 'autosnippet' }, { t '\\nu' }),
  s({ trig = ';N', snippetType = 'autosnippet' }, { t '\\Nu' }),
  s({ trig = ';x', snippetType = 'autosnippet' }, { t '\\xi' }),
  s({ trig = ';X', snippetType = 'autosnippet' }, { t '\\Xi' }),
  s({ trig = ';o', snippetType = 'autosnippet' }, { t '\\omicron' }),
  s({ trig = ';O', snippetType = 'autosnippet' }, { t '\\Omicron' }),
  s({ trig = ';p', snippetType = 'autosnippet' }, { t '\\pi' }),
  s({ trig = ';P', snippetType = 'autosnippet' }, { t '\\Pi' }),
  s({ trig = ';r', snippetType = 'autosnippet' }, { t '\\rho' }),
  s({ trig = ';R', snippetType = 'autosnippet' }, { t '\\Rho' }),
  s({ trig = ';s', snippetType = 'autosnippet' }, { t '\\sigma' }),
  s({ trig = ';S', snippetType = 'autosnippet' }, { t '\\Sigma' }),
  s({ trig = ';t', snippetType = 'autosnippet' }, { t '\\tau' }),
  s({ trig = ';T', snippetType = 'autosnippet' }, { t '\\Tau' }),
  s({ trig = ';u', snippetType = 'autosnippet' }, { t '\\upsilon' }),
  s({ trig = ';U', snippetType = 'autosnippet' }, { t '\\Upsilon' }),
  s({ trig = ';ph', snippetType = 'autosnippet' }, { t '\\phi' }),
  s({ trig = ';Ph', snippetType = 'autosnippet' }, { t '\\Phi' }),
  s({ trig = ';ch', snippetType = 'autosnippet' }, { t '\\chi' }),
  s({ trig = ';Ch', snippetType = 'autosnippet' }, { t '\\Chi' }),
  s({ trig = ';ps', snippetType = 'autosnippet' }, { t '\\psi' }),
  s({ trig = ';Ps', snippetType = 'autosnippet' }, { t '\\Psi' }),
  s({ trig = ';w', snippetType = 'autosnippet' }, { t '\\omega' }),
  s({ trig = ';W', snippetType = 'autosnippet' }, { t '\\Omega' }),
  s({ trig = ';vth', snippetType = 'autosnippet' }, { t '\\vartheta' }),
  s({ trig = ';vph', snippetType = 'autosnippet' }, { t '\\varphi' }),
  s({ trig = ';vs', snippetType = 'autosnippet' }, { t '\\varsigma' }),
  s({ trig = ';ve', snippetType = 'autosnippet' }, { t '\\varepsilon' }),
  s({ trig = 'apx', snippetType = 'autosnippet' }, { t '\\approx' }),
}
